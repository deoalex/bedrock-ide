#!@perlrun@

# RESTful API to support Bedrock IDE

use strict;
use warnings;

BEGIN {
  use lib '@bedrock_perl5libdir@';
}

# +--------------------------+
# | MAIN PROGRAM STARTS HERE |
# +--------------------------+

use Bedrock;
use Bedrock::Array;
use Bedrock::IDE;
use Bedrock::IDE::Trapper;
use Bedrock::Hash;
use Bedrock::Template;
use Bedrock::XML;
use Bedrock::IDE::Config qw/$IDE_CONFIG $PLUGIN_PATH $PORT $CONFIG_PATH_ROOT $DOCUMENT_ROOT $PID_FILE/;

use Data::Dumper;
use File::Copy;
use File::Path qw/make_path/;
use File::Temp qw/tempfile/;
use IPC::Run3;
use JSON;
use Log::Log4perl;
use Scalar::Util qw/reftype/;

my %log4perl = %{$IDE_CONFIG->{log4perl}};
Log::Log4perl->init(\%log4perl);
my $logger = Log::Log4perl->get_logger();

unless ( -d $PLUGIN_PATH . '/BLM/Startup' ) {
  $logger->info("warning: $PLUGIN_PATH/BLM/Startup does not exists. Creating $PLUGIN_PATH");
  make_path($PLUGIN_PATH . '/BLM/Startup' );
}

$logger->info(sprintf("Starting Bedrock IDE..."));
$logger->info(sprintf("Listenting on port.....[%s]", $PORT));
$logger->info(sprintf("CONFIG_PATH_ROOT.......[%s]", $CONFIG_PATH_ROOT));
$logger->info(sprintf("DOCUMENT_ROOT..........[%s]", $DOCUMENT_ROOT));
$logger->info(sprintf("PLUGIN_PATH............[%s]", $PLUGIN_PATH));
$logger->info(sprintf("PID file...............[%s]", $PID_FILE));

my $pid = Bedrock::IDE->new($PORT)->background(log_file => 'Log::Log4perl');

open (my $fh, ">$PID_FILE") or die "could not create pid file.";
print $fh $pid;
close $fh;

exit 0;
