package Bedrock::IDE;

use parent qw/HTTP::Server::Simple::CGI/;

use Bedrock::IDE::API;

use Log::Log4perl;
use JSON;

sub handle_request {
  my ($self, $cgi) = @_;

  my $logger = Log::Log4perl::get_logger();
  
  my $api = Bedrock::IDE::API->new({cgi => $cgi});
  
  my $result = eval {
    $api->dispatch();
  };
  
  if ( ref($result) ) {
    print $result->{status} . "\r\n";
    print "HTTP/1.0 200 OK\r\n";
    print "Content-Type: application/json\n\n";
    print to_json($result->{data}, { pretty => 1 });
  }
  elsif ( $@ ) {
    $logger->error("ERROR: $@");
    print "HTTP/1.0 500 Internal Server Error\r\n";
    print "Content-Type: text/plain\n\n";
    print $@;

  }
  else {
    print "HTTP/1.0 404 Not found\r\n";
    print $cgi->header,
      $cgi->start_html('Not found'),
      $cgi->h1('Not found ' . $path),
      $cgi->end_html;
  }
}

sub post_setup_hook {
  my $self = shift;
  
  $self->SUPER::post_setup_hook();
  # only need to tie STDERR first time (see note above)
  tied *STDERR || tie *STDERR, 'Bedrock::IDE::Trapper';
}

1;
