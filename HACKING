# -*-text-*-

The 'bedrock-ide' project is built using the GNU Autotools (Automake, Autoconf,
etc.)

This file contains the following sections:

    * Building from a Source Tarball
    * Building from CVS

Building from a Source Tarball
==============================

If you simply want to build the 'bedrock-ide' project (as opposed to hacking on
the codebase), the easiest thing to do is obtain a source distribution tarball
of the version of the project you wish to build.

This relieves you of having to access to specific versions of the GNU
Autotools, etc.

    $ cd /usr/local/src
    .../src$ wget -nd http://some.host.signatureinfo.com/some/path/berock-ide-0.0.1.tar.gz
    .../src$ ls | grep berock-ide
    berock-ide-0.0.1.tar.gz
    .../src$
    .../src$ gzip -dc berock-ide-0.0.1.gz | tar xf -
    .../src$ cd berock-ide-0.0.1
    .../src/berock-ide-0.0.1$ ./configure --prefix=/path/to/whatever
    .../src/berock-ide-0.0.1$ make
    .../src/berock-ide-0.0.1$ make check
    .../src/berock-ide-0.0.1$ make install



Building from CVS
=================

All developers working on the 'berock-ide' project need to be using the same
versions of the Autotools programs in the toolchain. Currently (as of
2012-02), those versions are:

    automake 1.11.1
    autoconf 2.67

You can determine the versions in your PATH by invoking the respective
tools with the '--version' option:

    $ autoconf --version
    autoconf (GNU Autoconf) 2.67
    Copyright (C) 2006 Free Software Foundation, Inc.
    This is free software.  You may redistribute copies of it under the terms of
    the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
    There is NO WARRANTY, to the extent permitted by law.

    Written by David J. MacKenzie and Akim Demaille.


    $ autoreconf --version
    autoreconf (GNU Autoconf) 2.67
    Copyright (C) 2006 Free Software Foundation, Inc.
    This is free software.  You may redistribute copies of it under the terms of
    the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
    There is NO WARRANTY, to the extent permitted by law.

    Written by David J. MacKenzie and Akim Demaille.


Check the berock-ide source out of CVS:

    $ cvs co berock-ide
    $ cd berock-ide

You'll notice that there is a 'configure' script in the root directory, as
well as 'Makefile.in' files scattered throughout the tree. These files are all
generated by the GNU Autotools, and are checked into CVS to allow (in the
future) developers to configure the project upon CVS checkout.

Upon a fresh checkout, you should be able to just run 'configure'. However, if
you have an already checked-out source tree that you run some variation of
'cvs update' on, then simply rerunning 'configure' will not work because CVS
will have modified the timestamps of updated files to have the current time.

In order to allow developers to configure the project directly after a CVS
update (without requiring access to the GNU Autotools), we need a script to
touch(1) various files in the correct order (that is, in the same order that
the GNU Autotools generated them in the first place). As of 2008-02-28, such a
script does not exist for the 'berock-ide' project, so developers must have the
correct versions of the GNU Autotools available.

Pre-configuration: The 'bootstrap' script

    $ pwd
    .../berock-ide
    $ ./bootstrap

The 'bootstrap' script simply invokes the GNU Autotools in the correct order
in such a way that it assumes all timestamps are invalid. This has the effect
of regenerating the autogenerated files with meaningful timestamps. After
doing a 'cvs update', if the 'bootstrap' script is not run prior to running
'configure', you'll get strange, broken behavior from the 'configure' process
due to the timestamp issue mentioned above.

After you've run the 'bootstrap' script, you are ready to configure the
project for your host:

    $ ./configure --prefix=/path/to/wherever
    $ make
    $ make check

You probably do not want to run 'make install' from your CVS working
directory. If you want to install ("for real") your newly hacked version of
the 'berock-ide' project, then create a distribution tarball and install using
that:

    $ make distcheck
    $ ls | grep berock-ide
    berock-ide-0.0.1.tar.gz

Note: It is not acceptable to simply invoke:

    $ make dist

for a release of the 'berock-ide'. If the build does not pass the 'distcheck'
verifications, the package is broken.

For new releases, the version of the project must be changed in the
'configure.ac' file, and the 'bootstrap' script re-run to regenerate the GNU
Autotools generated files (such as the 'configure' program and all
'Makefile.in' files).

After a release is made, the version number should be incremented with the
constant '-snapshot' appended to it. Again, the 'boostrap' script should be
re-run to regenerate the GNU Autotools generated files.

For example, during the development of the code that will be released as
version 0.0.2, the version number specified in 'configure.ac' should be:

    0.0.2-snapshot

This eliminates the possibility of producing artifacts labeled just '0.0.2'
which are not the final release.

When it comes time to do the release, the version number in 'configure.ac'
should be changed to remove the '-snapshot' suffix, and the 'bootstrap'
script rerun.

    0.0.2

The GNU Autotools generated files should be checked into CVS, and the release
should be tagged. After the final release is tagged, the version number in
'configure.ac' should be bumped up for the next development cycle, and the
'bootstrap' script re-run.

    0.0.2-snapshot
